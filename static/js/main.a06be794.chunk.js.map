{"version":3,"sources":["components/form.js","components/weather.js","components/date.js","components/useForecast.js","index.js"],"names":["Form","props","className","onSubmit","loadWeather","type","name","placeholder","autoComplete","class","Weather","city","temp_celsius","temp_min","temp_max","description","currentTime","season","CurrentDate","dat","Date","calendar","getDay","getDate","getMonth","getFullYear","state","showDate","this","Component","styleApp","width","margin","styleAnimation","height","Season","animationData","winter","style","summer","MyComponent","getWeather","e","a","preventDefault","target","elements","value","error","fetch","api_call","json","response","setState","sys","country","celsius","calculateCelsius","main","temp","weather","undefined","Math","floor","React","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a06be794.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = (props) => {\r\n    const css = `\r\n    .form{\r\n       display: flex;\r\n         justify-content: center;\r\n    }\r\n\r\n    .ui.message h1 {\r\n        padding: 15px;\r\n    }\r\n\r\n    .ui icon input{\r\n        padding: 10px;\r\n    }\r\n\r\n    .ui.button:not(.icon)>.icon:not(.button):not(.dropdown){\r\n        margin:0;\r\n    }\r\n    `;\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            {' '}\r\n            <style>{css}</style>\r\n            <h1 className=\"ui center aligned header\">Weather app</h1>\r\n            <form onSubmit={props.loadWeather} className=\"form\">\r\n                <div className=\"ui fluid category search\">\r\n                    <div className=\"ui icon input\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"city\"\r\n                            placeholder=\"City\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <button className=\"ui inverted violet button\">\r\n                            {' '}\r\n                            <i class=\"search icon\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\n\r\nconst Weather = (props) => {\r\nconst css = `\r\n.content{\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n}\r\n.description-weather{\r\n    padding: 14px;\r\n    font-size: 16px;\r\n    text-align: center;\r\n    line-height: 1.5;\r\n}\r\n`;\r\n    return (\r\n        <div>\r\n        <style>{css}</style>\r\n        <div className=\"content\">\r\n            <div className=\"content-weather\">\r\n                <div className=\"description-weather\">\r\n                    {props.city ? (\r\n                        <span>\r\n                            City: <br></br>\r\n                            {props.city}{' '}\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"description-weather\">\r\n                    {props.temp_celsius ? (\r\n                        <span>\r\n                            Current temperature: <br></br>\r\n                            {props.temp_celsius}&deg;C\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"description-weather\">\r\n                    {props.temp_min ? (\r\n                        <span>\r\n                            Min. temperature: <br></br>\r\n                            {props.temp_min}&deg;C\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"description-weather\">\r\n                    {props.temp_max ? (\r\n                        <span>\r\n                            Max. temperature: <br></br>\r\n                            {props.temp_max}&deg;C\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"description-weather\">\r\n                    {props.description ? (\r\n                        <span>\r\n                            Description: <br></br>\r\n                            {props.description}\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"description-weather\"><h3 className=\"ui header\">{props.currentTime}</h3></div>\r\n            <div className=\"season-animation\">{props.season}</div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Weather;\r\n","import React, { Component } from 'react';\r\n\r\nclass CurrentDate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const months = [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December',\r\n        ];\r\n        const days = [\r\n            'Sunday',\r\n            'Monday',\r\n            'Tuesday',\r\n            'Wednesday',\r\n            'Thursday',\r\n            'Friday',\r\n            'Saturday',\r\n        ];\r\n\r\n        const dat = new Date(),\r\n            calendar =\r\n                days[dat.getDay()] + ' ' +\r\n                dat.getDate() + ' ' +\r\n                months[dat.getMonth()] + ' ' +\r\n                dat.getFullYear();\r\n\r\n        this.state = {\r\n            showDate: calendar,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>{this.state.showDate}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CurrentDate;\r\n","import React from 'react';\r\nimport Form from './form';\r\nimport Weather from './weather';\r\nimport Lottie from 'lottie-react';\r\nimport winter from '../checkSeason/winter.json';\r\nimport summer from '../checkSeason/summer.json';\r\nimport CurrentDate from './date';\r\n\r\nconst styleApp = {\r\n    width: '1000px',\r\n    margin: '0 auto',\r\n};\r\nconst styleAnimation = {\r\n    height: '450px',\r\n};\r\nconst Season = [\r\n    <Lottie animationData={winter} style={styleAnimation} />,\r\n    <Lottie animationData={summer} style={styleAnimation} />,\r\n];\r\n\r\nconst currentTime = <CurrentDate />;\r\n\r\nconst API_key = `a97e81c96efb3e270010981f4ae910b6`;\r\n\r\nclass MyComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            city: undefined,\r\n            main: undefined,\r\n            celsius: undefined,\r\n            temp_max: undefined,\r\n            temp_min: undefined,\r\n            description: '',\r\n            season: '',\r\n            currentTime: ''\r\n        };\r\n    }\r\n\r\n    calculateCelsius(temp) {\r\n        let cel = Math.floor(temp - 273.15);\r\n        return cel;\r\n    }\r\n\r\n    getWeather = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const city = e.target.elements.city.value;\r\n        if (city ? this.getWeather : this.error) {\r\n            const api_call = await fetch(\r\n                `https://api.openweathermap.org/data/2.5/weather?q=${city} &appid=${API_key}`\r\n            );\r\n\r\n            const response = await api_call.json();\r\n\r\n            this.setState({\r\n                city: `${response.name},${response.sys.country}`,\r\n                celsius: this.calculateCelsius(response.main.temp),\r\n                temp_max: this.calculateCelsius(response.main.temp_max),\r\n                temp_min: this.calculateCelsius(response.main.temp_min),\r\n                description: response.weather[0].description,\r\n              currentTime: currentTime,\r\n                season:\r\n                    this.calculateCelsius(response.main.temp) < '5'\r\n                        ? Season[0]\r\n                        : Season[1],\r\n            });\r\n        } else {\r\n            this.setState({ error: true});\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"App ui floating message\" style={styleApp}>\r\n                <Form loadWeather={this.getWeather} error={this.state.error} />\r\n            \r\n                <Weather\r\n                    currentTime={this.state.currentTime}\r\n                    city={this.state.city}\r\n                    temp_celsius={this.state.celsius}\r\n                    temp_max={this.state.temp_max}\r\n                    temp_min={this.state.temp_min}\r\n                    description={this.state.description}\r\n                    season={this.state.season}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyComponent;\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport MyComponent from './components/useForecast';\r\n\r\n// https://github.com/lottie-react-native/lottie-react-native\r\n\r\nconst App = () => {\r\n    return <MyComponent />;\r\n};\r\nexport default App;\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}