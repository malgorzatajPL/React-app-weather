{"version":3,"sources":["components/search/search.js","components/date.js","components/error/error.js","components/form.js","components/weather.js","components/useForecast.js","index.js"],"names":["Component","description","Error","Card","Content","header","extra","animationData","error","Form","props","className","onSubmit","loadWeather","type","name","placeholder","autoComplete","class","content","display","justifyContent","styleDescription","padding","fontSize","textAlign","lineHeight","Weather","style","city","temp_celsius","temp_min","temp_max","season","height","Season","winter","summer","MyComponent","getWeather","e","a","preventDefault","target","elements","value","fetch","api_call","json","response","setState","sys","country","celsius","calculateCelsius","main","temp","weather","R","state","undefined","Math","floor","this","React","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.73caa2ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: '' };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <div className=\"ui fluid category search\">\r\n                    <div className=\"ui icon input\">\r\n                        <input\r\n                            className=\"prompt\"\r\n                            type=\"text\"\r\n                            value={this.state.value}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <i class=\"search icon\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"location\">{this.state.value}</div>\r\n                    <div className=\"date\">date</div>\r\n                    <div className=\"weather-box\">\r\n                        <div className=\"temp\">tempÂ°c</div>\r\n                        <div className=\"weather\">weather</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\n\r\nclass CurrentDate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const months = [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December',\r\n        ];\r\n        const days = [\r\n            'Sunday',\r\n            'Monday',\r\n            'Tuesday',\r\n            'Wednesday',\r\n            'Thursday',\r\n            'Friday',\r\n            'Saturday',\r\n        ];\r\n        const dat = new Date(),\r\n            calendar =\r\n                days[dat.getDay()] + ' ' +\r\n                dat.getDate() + ' ' +\r\n                months[dat.getMonth()] + ' ' +\r\n                dat.getFullYear();\r\n\r\n        this.state = {\r\n            showDate: calendar,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>{this.state.showDate}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CurrentDate;\r\n","import Lottie from \"lottie-react\";\r\nimport error from \"./error.json\";\r\nimport { Card} from 'semantic-ui-react'\r\n\r\nconst description = [\r\n  'Something went wrong. Please reset your applications.',\r\n] \r\n\r\nconst Error = () => (\r\n  <Card>\r\n    <Card.Content header='Error' />\r\n    <Card.Content description={description} />\r\n    <Card.Content extra>\r\n    <Lottie animationData={error} />\r\n    </Card.Content>\r\n  </Card>\r\n)\r\n\r\nexport default Error;\r\n","import React from 'react';\r\n\r\nconst Form = (props) => {\r\n    const css = `\r\n    .ui.button:not(.icon)>.icon:not(.button):not(.dropdown){\r\n        margin:0;\r\n    }\r\n    .form{\r\n        display:flex;\r\n        justify-content: center;\r\n    }\r\n    `;\r\n    return (\r\n        <div className=\"container\">\r\n            {' '}\r\n            <style>{css}</style>\r\n            <h1 className=\"ui center aligned icon header\">Weather app</h1>\r\n            <form onSubmit={props.loadWeather} className=\"form\">\r\n                <div className=\"ui fluid category search\">\r\n                    <div className=\"ui icon input\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"city\"\r\n                            placeholder=\"City\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <button className=\"ui inverted violet button\">\r\n                            {' '}\r\n                            <i class=\"search icon\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst content = {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n};\r\n\r\nconst styleDescription = {\r\n    padding: '14px',\r\n    fontSize: '16px',\r\n    textAlign: 'center',\r\n    lineHeight: '1.5',\r\n};\r\n\r\nconst Weather = (props) => {\r\n    return (\r\n        <div style={content}>\r\n            <div className=\"content-weather\">\r\n                <div className=\"description-weather\" style={styleDescription}>\r\n                    {props.city ? (\r\n                        <span>\r\n                            City: <br></br>\r\n                            {props.city}{' '}\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"description-weather\" style={styleDescription}>\r\n                    {props.temp_celsius ? (\r\n                        <span>\r\n                            Current temperature: <br></br>\r\n                            {props.temp_celsius}&deg;C\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"description-weather\" style={styleDescription}>\r\n                    {props.temp_min ? (\r\n                        <span>\r\n                            Min. temperature: <br></br>\r\n                            {props.temp_min}&deg;C\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"description-weather\" style={styleDescription}>\r\n                    {props.temp_max ? (\r\n                        <span>\r\n                            Max. temperature: <br></br>\r\n                            {props.temp_max}&deg;C\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"description-weather\" style={styleDescription}>\r\n                    {props.description ? (\r\n                        <span>\r\n                            Description: <br></br>\r\n                            {props.description}\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n            <div className=\"season-animation\">{props.season}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Weather;\r\n","import React from 'react';\r\nimport Error from './error/error';\r\nimport Loading from './loading/loading';\r\nimport Form from './form';\r\nimport Weather from './weather';\r\nimport Lottie from 'lottie-react';\r\nimport winter from '../checkSeason/winter.json';\r\nimport summer from '../checkSeason/summer.json';\r\n\r\nconst style = {\r\n    height: '400px',\r\n    padding: '20px',\r\n};\r\nconst Season = [\r\n    <Lottie animationData={winter} style={style} />,\r\n    <Lottie animationData={summer} style={style} />,\r\n];\r\nconst R = <Lottie animationData={Error} />;\r\n\r\n\r\nconst API_key = `a97e81c96efb3e270010981f4ae910b6`;\r\n\r\nclass MyComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            city: undefined,\r\n            main: undefined,\r\n            celsius: undefined,\r\n            temp_max: undefined,\r\n            temp_min: undefined,\r\n            description: '',\r\n            season: '',\r\n            error: false\r\n\r\n        };\r\n    }\r\n\r\n    calculateCelsius(temp) {\r\n        let cel = Math.floor(temp - 273.15);\r\n        return cel;\r\n    }\r\n\r\n    getWeather = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const city = e.target.elements.city.value;\r\n        if (city ? this.getWeather : this.error) {\r\n            const api_call = await fetch(\r\n                `http://api.openweathermap.org/data/2.5/weather?q=${city} &appid=${API_key}`\r\n            );\r\n\r\n            const response = await api_call.json();\r\n\r\n            this.setState({\r\n                city: `${response.name},${response.sys.country}`,\r\n                celsius: this.calculateCelsius(response.main.temp),\r\n                temp_max: this.calculateCelsius(response.main.temp_max),\r\n                temp_min: this.calculateCelsius(response.main.temp_min),\r\n                description: response.weather[0].description,\r\n                season:\r\n                    this.calculateCelsius(response.main.temp) < '5'\r\n                        ? Season[0]\r\n                        : Season[1],\r\n            });\r\n        } else {\r\n            this.setState({ error: this.R});\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Form loadWeather={this.getWeather} error={this.state.error} />\r\n                <Weather\r\n                    city={this.state.city}\r\n                    temp_celsius={this.state.celsius}\r\n                    temp_max={this.state.temp_max}\r\n                    temp_min={this.state.temp_min}\r\n                    description={this.state.description}\r\n                    season={this.state.season}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyComponent;\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport Search from './components/search/search';\r\nimport CurrentDate from './components/date';\r\nimport MyComponent from './components/useForecast';\r\n\r\n// https://github.com/lottie-react-native/lottie-react-native\r\n\r\nconst App = () => {\r\n    return <MyComponent />;\r\n};\r\nexport default App;\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}